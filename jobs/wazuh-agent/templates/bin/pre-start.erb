#!/bin/bash

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

JOB_NAME=wazuh-agent
JOB_DIR=/var/vcap/jobs/$JOB_NAME
PACKAGE_DIR=/var/vcap/packages/wazuh-agent
LOG_DIR=/var/vcap/sys/log/$JOB_NAME
DATA_DIR=/var/vcap/data/wazuh-agent
TIMESTAMP=`date "+%Y-%m-%d %H:%M:%S"`

mkdir -p ${DATA_DIR}/etc
rm -f /etc/ossec-init.conf

cp ${JOB_DIR}/config/preloaded-vars.conf ${PACKAGE_DIR}/source_code/etc/preloaded-vars.conf
cd ${PACKAGE_DIR}/source_code
./install.sh
cp ${JOB_DIR}/config/ossec.conf ${PACKAGE_DIR}/etc/
cp ${JOB_DIR}/config/local_internal_options.conf ${PACKAGE_DIR}/etc/
cp ${JOB_DIR}/config/active-response/quarantine.sh ${PACKAGE_DIR}/active-response/bin/
chown root:ossec ${PACKAGE_DIR}/active-response/bin/quarantine.sh
chmod 750 ${PACKAGE_DIR}/active-response/bin/quarantine.sh

mkdir -p ${PACKAGE_DIR}/wodles/ciscat/scanner ${PACKAGE_DIR}/wodles/ciscat/scanner/benchmarks ${PACKAGE_DIR}/wodles/ciscat/java

cp ${JOB_DIR}/config/CIS_Ubuntu_Linux_14.04_LTS_Benchmark_v2.0.0-oval.xml ${PACKAGE_DIR}/wodles/ciscat/scanner/benchmarks/
cp ${JOB_DIR}/config/CIS_Ubuntu_Linux_14.04_LTS_Benchmark_v2.0.0-xccdf.xml ${PACKAGE_DIR}/wodles/ciscat/scanner/benchmarks/

tar xf ${PACKAGE_DIR}/source_code/ciscat.tar.gz -C ${PACKAGE_DIR}/wodles/ciscat/scanner
tar xf ${PACKAGE_DIR}/source_code/java.tar.gz -C ${PACKAGE_DIR}/wodles/ciscat/

chown -R root:ossec ${PACKAGE_DIR}/wodles/ciscat/java ${PACKAGE_DIR}/wodles/ciscat/scanner ${PACKAGE_DIR}/wodles/ciscat/scanner/benchmarks
chmod -R 660 ${PACKAGE_DIR}/wodles/ciscat/scanner
chmod -R 660 ${PACKAGE_DIR}/wodles/ciscat/scanner/benchmarks
chmod 650 ${PACKAGE_DIR}/wodles/ciscat/scanner/CIS-CAT.sh


if [ ! -L ${LOG_DIR}/wazuh_logs ]; then
    ln -s ${PACKAGE_DIR}/logs/ ${LOG_DIR}/wazuh_logs
fi

if [ ! -s ${DATA_DIR}/etc/client.keys ]; then
    if ${PACKAGE_DIR}/bin/agent-auth -m <%= p("wazuh_server_registration_address") %> -A <%= p("wazuh_agents_prefix") %>`hostname`
    then
      cp ${PACKAGE_DIR}/etc/client.keys ${DATA_DIR}/etc/
      echo "$TIMESTAMP : INFO : Registration success" >> ${LOG_DIR}/setup.log
    else
      cp ${JOB_DIR}/config/client.keys.sample ${PACKAGE_DIR}/etc/client.keys
      echo "$TIMESTAMP : ERROR : Registration failure" >> ${LOG_DIR}/setup.log
    fi

else
    cp ${DATA_DIR}/etc/client.keys ${PACKAGE_DIR}/etc/
    echo "$TIMESTAMP : INFO : Agent was already registered" >> ${LOG_DIR}/setup.log
fi

# Start Kaspersky installation
$JOB_DIR/bin/kaspersky.sh &

# Start registration daemons
$JOB_DIR/bin/registration.sh &

exit 0
